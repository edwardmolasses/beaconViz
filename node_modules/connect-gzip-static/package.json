{
  "_args": [
    [
      {
        "raw": "connect-gzip-static@^1.0.0",
        "scope": null,
        "escapedName": "connect-gzip-static",
        "name": "connect-gzip-static",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/andrewlachkovics/Projects/BeaconViz/node_modules/web-app-runner"
    ]
  ],
  "_from": "connect-gzip-static@>=1.0.0 <2.0.0",
  "_id": "connect-gzip-static@1.0.0",
  "_inCache": true,
  "_location": "/connect-gzip-static",
  "_npmUser": {
    "name": "pirxpilot",
    "email": "pirxpilot@code42day.com"
  },
  "_npmVersion": "1.4.23",
  "_phantomChildren": {},
  "_requested": {
    "raw": "connect-gzip-static@^1.0.0",
    "scope": null,
    "escapedName": "connect-gzip-static",
    "name": "connect-gzip-static",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/web-app-runner"
  ],
  "_resolved": "https://registry.npmjs.org/connect-gzip-static/-/connect-gzip-static-1.0.0.tgz",
  "_shasum": "70d67eb226b65635feb558c687b02a1f4c388cb4",
  "_shrinkwrap": null,
  "_spec": "connect-gzip-static@^1.0.0",
  "_where": "/Users/andrewlachkovics/Projects/BeaconViz/node_modules/web-app-runner",
  "author": {
    "name": "Damian Krzeminski",
    "email": "pirxpilot@code42day.com"
  },
  "bugs": {
    "url": "https://github.com/code42day/connect-gzip-static/issues"
  },
  "dependencies": {
    "debug": "~2",
    "find": "~0",
    "parseurl": "~1",
    "send": "~0",
    "serve-static": "~1"
  },
  "description": "gzip static middleware for connect - serves compressed files if they exist, falls through to connect-static if they don't",
  "devDependencies": {
    "connect": ">=2",
    "jshint": "~2",
    "mocha": "~1",
    "should": "~1"
  },
  "directories": {},
  "dist": {
    "shasum": "70d67eb226b65635feb558c687b02a1f4c388cb4",
    "tarball": "https://registry.npmjs.org/connect-gzip-static/-/connect-gzip-static-1.0.0.tgz"
  },
  "gitHead": "3b8795d32e1f68ef0a9e75da44718735f3602344",
  "homepage": "https://github.com/code42day/connect-gzip-static#readme",
  "keywords": [
    "connect",
    "middleware",
    "gzip",
    "compress"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "pirxpilot",
      "email": "pirxpilot@code42day.org"
    }
  ],
  "name": "connect-gzip-static",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://img.shields.io/travis/code42day/connect-gzip-static.svg)](http://travis-ci.org/code42day/connect-gzip-static)\n[![Dependency Status](https://img.shields.io/gemnasium/code42day/connect-gzip-static.svg)](https://gemnasium.com/code42day/connect-gzip-static)\n[![NPM version](https://img.shields.io/npm/v/connect-gzip-static.svg)](https://www.npmjs.org/package/connect-gzip-static)\n\n# connect-gzip-static\n\nMiddleware for [connect][]: serves compressed files if they exist, falls through to connect-static\nif they don't, or if browser does not send 'Accept-Encoding' header.\n\nYou should use `connect-gzip-static` if your build process already creates gzipped files. If you\nwant to gzip your data on the fly use built-in [connect compress][] middleware. And if you want to\ngzip your files dynamically you may want to look up [connect gzip][].\n\n## Installation\n\n\t  $ npm install connect-gzip-static\n\n## Options\n\ngzip-static is meant to be a drop in replacement for [connect static][] middleware. Use the same\noptions as you would with [connect static][].\n\n\n## Usage\n\n```javascript\nvar gzipStatic = require('connect-gzip-static');\nvar oneDay = 86400000;\n\nconnect()\n  .use(gzipStatic(__dirname + '/public'))\n\nconnect()\n  .use(gzipStatic(__dirname + '/public', { maxAge: oneDay }))\n```\n\n## How it works\n\n`gzip-static` starts by locating all compressed files (ie. _files with `.gz` extension_) in `root` directory. All `HTTP GET` and `HTTP HEAD` requests with `Accept-Encoding` header set to `gzip` are checked against the list of compressed files and, if possible, fulfilled by returning the compressed versions. If compressed version is not found or if the request does not have an appropriate `Accept-Encoding` header, the request is processed in the same way as standard `static` middleware would handle it.\n\n## Debugging\n\nThis project uses [debug module](https://github.com/visionmedia/debug). To enable the debug log, just set the debug enviromental variable: `DEBUG=\"connect:gzip-static\"`\n\n# License\n\nMIT\n\n[connect]: http://www.senchalabs.org/connect\n[connect static]: http://www.senchalabs.org/connect/static.html\n[connect compress]: http://www.senchalabs.org/connect/compress.html\n[connect gzip]: https://github.com/tikonen/connect-gzip\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/code42day/connect-gzip-static.git"
  },
  "scripts": {
    "test": "make lint test"
  },
  "version": "1.0.0"
}
